name: Helm chart Validation

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - 'feature/**'

jobs:
  helm-chart-validation:
    runs-on: ubuntu-latest
    steps:
      - name: get pull request ref
        id: get_pull_request_ref
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/:repository/pulls/:pr_id
          repository: ${{ github.repository }}
          pr_id: ${{ github.event.pull_request.number }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Get chart location and service id
        id: vars
        run: |
          echo "::set-output name=chart_location::$(echo "${{ fromJson(steps.get_pull_request_ref.outputs.data).body }}" | grep path | awk '{print $4}')"
          echo "::set-output name=service_id::$(echo "${{ fromJson(steps.get_pull_request_ref.outputs.data).body }}" | grep service | awk '{print $4}')"

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: 'latest'

      - name: Install kubeval
        run: helm plugin install https://github.com/instrumenta/helm-kubeval

      - name: Install checkov
        run: |
          pip install -U checkov
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      - uses: actions/checkout@master

      - name: Check dev-values existence
        id: check_files_dev
        uses: andstor/file-existence-action@v1
        with:
          files: " ${{ steps.vars.outputs.chart_location }}/dev.values.yaml"

      - name: Check stage-values existence
        id: check_files_stage
        uses: andstor/file-existence-action@v1
        with:
          files: " ${{ steps.vars.outputs.chart_location }}/stage.values.yaml"

      - name: Check prod-values existence
        id: check_files_prod
        uses: andstor/file-existence-action@v1
        with:
          files: " ${{ steps.vars.outputs.chart_location }}/prod.values.yaml"

      - name: Check dev helm syntax
        if: steps.check_files_dev.outputs.files_exists == 'true' && ${{ always() }}
        uses: igabaydulin/helm-check-action@0.1.4
        env:
          CHART_LOCATION: ${{ steps.vars.outputs.chart_location }}
          CHART_VALUES: ${{ steps.vars.outputs.chart_location }}/dev.values.yaml
      - name: Scan dev helm Chart
        if: steps.check_files_dev.outputs.files_exists == 'true'
        run: |
          cd ${{ steps.vars.outputs.chart_location }}
          helm template --debug -f dev.values.yaml ${{ steps.service-id.outputs.service-id }} . >> dev.temp.yaml
          checkov -f dev.temp.yaml --framework kubernetes || true

      - name: Check stage helm syntax
        if: steps.check_files_stage.outputs.files_exists == 'true'
        uses: igabaydulin/helm-check-action@0.1.4
        env:
          CHART_LOCATION: ${{ steps.vars.outputs.chart_location }}
          CHART_VALUES: ${{ steps.vars.outputs.chart_location }}/stage.values.yaml
      - name: Scan stage helm Chart
        if: steps.check_files_stage.outputs.files_exists == 'true'
        run: |
          cd ${{ steps.vars.outputs.chart_location }}
          helm template --debug -f stage.values.yaml ${{ steps.service-id.outputs.service-id }} . >> stage.temp.yaml
          checkov -f stage.temp.yaml --framework kubernetes || true

      - name: Check prod helm syntax
        if: steps.check_files_prod.outputs.files_exists == 'true'
        uses: igabaydulin/helm-check-action@0.1.4
        env:
          CHART_LOCATION: ${{ steps.vars.outputs.chart_location }}
          CHART_VALUES: ${{ steps.vars.outputs.chart_location }}/prod.values.yamlocation.outputs.chart_location }}/prod.values.yaml)"
      - name: Scan prod helm Chart
        if: steps.check_files_prod.outputs.files_exists == 'true'
        run: |
          cd ${{ steps.vars.outputs.chart_location }}
          helm template --debug -f stage.values.yaml ${{ steps.service-id.outputs.service-id }} . >> prod.temp.yaml
          checkov -f prod.temp.yaml --framework kubernetes || true

      - name: Check kubernetes schemas
        if: ${{ always() }}
        run: helm kubeval ${{ steps.vars.outputs.chart_location }}

      - name: Success Comment on PR
        if: ${{ success() }}
        uses: allthatjazzleo/actions-pull-request-add-comment@master
        with:
          message: |-
            Helm syntex & Kubernetes schemas 문제 없습니다! 🚀
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Fail Comment on PR
        if: ${{ failure() }}
        uses: allthatjazzleo/actions-pull-request-add-comment@master
        with:
          message: |-
            Helm syntax or Kubernetes schemas 체크하는 도중 문제가 발생했습니다. 아래 링크에서 확인해 주세요. 😢
            [https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"